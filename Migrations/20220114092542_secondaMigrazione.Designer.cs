// <auto-generated />
using System;
using Assicurazione;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assicurazione.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220114092542_secondaMigrazione")]
    partial class secondaMigrazione
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assicurazione.Models.Cliente", b =>
                {
                    b.Property<string>("CodiceFiscaleID")
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength();

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.HasKey("CodiceFiscaleID");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Assicurazione.Models.Polizza", b =>
                {
                    b.Property<int>("NumeroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroID"), 1L, 1);

                    b.Property<string>("CodiceFiscaleID")
                        .IsRequired()
                        .HasColumnType("nchar(16)");

                    b.Property<DateTime>("DataStipula")
                        .HasColumnType("datetime2");

                    b.Property<float>("ImportoAssicurato")
                        .HasColumnType("real");

                    b.Property<float>("RataMensile")
                        .HasColumnType("real");

                    b.Property<string>("polizza_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumeroID");

                    b.HasIndex("CodiceFiscaleID");

                    b.ToTable("Polizza", (string)null);

                    b.HasDiscriminator<string>("polizza_type").HasValue("polizza");
                });

            modelBuilder.Entity("Assicurazione.Models.Furto", b =>
                {
                    b.HasBaseType("Assicurazione.Models.Polizza");

                    b.Property<int>("PercentualeCoperta")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("furto");
                });

            modelBuilder.Entity("Assicurazione.Models.RCauto", b =>
                {
                    b.HasBaseType("Assicurazione.Models.Polizza");

                    b.Property<int>("Cilindrata")
                        .HasColumnType("int");

                    b.Property<string>("Targa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasDiscriminator().HasValue("rcauto");
                });

            modelBuilder.Entity("Assicurazione.Models.Vita", b =>
                {
                    b.HasBaseType("Assicurazione.Models.Polizza");

                    b.Property<int>("AnniDelAssicurato")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("vita");
                });

            modelBuilder.Entity("Assicurazione.Models.Polizza", b =>
                {
                    b.HasOne("Assicurazione.Models.Cliente", "Cliente")
                        .WithMany("Polizze")
                        .HasForeignKey("CodiceFiscaleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Assicurazione.Models.Cliente", b =>
                {
                    b.Navigation("Polizze");
                });
#pragma warning restore 612, 618
        }
    }
}
